{
	"info": {
		"_postman_id": "8dfc42e2-534a-4dd8-9a0c-6f2a8cd7a786",
		"name": "EarlyConnectApi",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "9674460"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "log",
					"item": [
						{
							"name": "add",
							"item": [
								{
									"name": "Create Log",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const response = pm.response.json();\r",
													"\r",
													"pm.test('Check Log Creation Response', () => {\r",
													"    if(pm.response.code === 200) {\r",
													"        console.log(\"Log Creation Response 200\")\r",
													"        pm.collectionVariables.set(\"logId\", response.logId);\r",
													"    }\r",
													"\r",
													"    if(pm.response.code != 200) {\r",
													"        console.log(\"Log could not be created!\")\r",
													"    }\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "X-Version",
												"value": "1.0"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"requestType\": \"Post\",\n  \"requestSource\": \"Dynamics\",\n  \"requestIP\": \"190.000.000.2\",\n  \"payload\": \"post something\",\n  \"fileName\": \"filename.csv\",\n  \"status\": \"processing\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/log/add"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "X-Version",
														"value": ""
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"requestType\": \"<string>\",\n  \"requestSource\": \"<string>\",\n  \"requestIP\": \"<string>\",\n  \"payload\": \"<string>\",\n  \"fileName\": \"<string>\",\n  \"status\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/log/add"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "X-Version",
														"value": ""
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"requestType\": \"<string>\",\n  \"requestSource\": \"<string>\",\n  \"requestIP\": \"<string>\",\n  \"payload\": \"<string>\",\n  \"fileName\": \"<string>\",\n  \"status\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/log/add"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "update",
							"item": [
								{
									"name": "Update Log",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Check Log Update Response', () => {\r",
													"    if(pm.response.code === 200) {\r",
													"        console.log(\"Log Update Response 200\")\r",
													"    }\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "X-Version",
												"value": "1.0"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"logId\": \"{{logId}}\",\n  \"status\": \"{{status}}\",\n  \"error\": \"{{error}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/log/update"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "(Required) ",
														"key": "X-Version",
														"value": ""
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"logId\": \"<integer>\",\n  \"status\": \"<string>\",\n  \"error\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/log/update"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "metrics-data",
					"item": [
						{
							"name": "Create Metrics Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Check Metrics Data Response', () => {\r",
											"    if(pm.response.code === 200) {\r",
											"        console.log(\"Metrics Data Response 200\")\r",
											"        pm.collectionVariables.set(\"status\", \"Completed\");\r",
											"        pm.collectionVariables.set(\"error\", \"\");\r",
											"    }\r",
											"\r",
											"    if(pm.response.code != 200) {\r",
											"        pm.collectionVariables.set(\"status\", \"Error\");\r",
											"        pm.collectionVariables.set(\"error\", pm.response.json().errors[0].message);\r",
											"    }\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "X-Version",
										"value": "1.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"metricsData\": [\n    {\n      \"region\": \"North East\",\n      \"intendedStartYear\": \"2023\",\n      \"maxTravelInMiles\": \"45\",\n      \"willingnessToRelocate\": false,\n      \"noOfGCSCs\": \"2\",\n      \"noOfStudents\": \"2\",\n      \"logId\": {{logId}},\n      \"metricFlags\": [\n        \"gcse_grade4_english_flag\",\n        \"gcse_grade4_maths_flag\"\n      ]\n    },\n    {\n      \"region\": \"London\",\n      \"intendedStartYear\": \"2023\",\n      \"maxTravelInMiles\": \"35\",\n      \"willingnessToRelocate\": true,\n      \"noOfGCSCs\": \"3\",\n      \"noOfStudents\": \"1\",\n      \"logId\": {{logId}},\n      \"metricFlags\": [\n        \"gcse_grade4_maths_flag\",\n        \"gcse_grade4_english_flag\"\n      ]\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/metrics-data"
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "X-Version",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metricsData\": [\n    {\n      \"region\": \"<string>\",\n      \"intendedStartYear\": \"<double>\",\n      \"maxTravelInMiles\": \"<integer>\",\n      \"willingnessToRelocate\": \"<boolean>\",\n      \"noOfGCSCs\": \"<integer>\",\n      \"noOfStudents\": \"<integer>\",\n      \"logId\": \"<integer>\",\n      \"metricFlags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"region\": \"<string>\",\n      \"intendedStartYear\": \"<double>\",\n      \"maxTravelInMiles\": \"<integer>\",\n      \"willingnessToRelocate\": \"<boolean>\",\n      \"noOfGCSCs\": \"<integer>\",\n      \"noOfStudents\": \"<integer>\",\n      \"logId\": \"<integer>\",\n      \"metricFlags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/metrics-data"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "X-Version",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metricsData\": [\n    {\n      \"region\": \"<string>\",\n      \"intendedStartYear\": \"<double>\",\n      \"maxTravelInMiles\": \"<integer>\",\n      \"willingnessToRelocate\": \"<boolean>\",\n      \"noOfGCSCs\": \"<integer>\",\n      \"noOfStudents\": \"<integer>\",\n      \"logId\": \"<integer>\",\n      \"metricFlags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"region\": \"<string>\",\n      \"intendedStartYear\": \"<double>\",\n      \"maxTravelInMiles\": \"<integer>\",\n      \"willingnessToRelocate\": \"<boolean>\",\n      \"noOfGCSCs\": \"<integer>\",\n      \"noOfStudents\": \"<integer>\",\n      \"logId\": \"<integer>\",\n      \"metricFlags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/metrics-data"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"detail\": \"<string>\",\n  \"instance\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Get Metrics Data By Leps Code",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Version",
										"value": "1.0",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/metrics-data/{{lepsCode}}"
							},
							"response": []
						}
					]
				},
				{
					"name": "student-data",
					"item": [
						{
							"name": "Create Student Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Check Student Data Response', () => {\r",
											"    if(pm.response.code === 200) {\r",
											"        console.log(\"Student Data Response 200\")\r",
											"        pm.collectionVariables.set(\"status\", \"Completed\");\r",
											"    }\r",
											"\r",
											"    if(pm.response.code != 200) {\r",
											"        pm.collectionVariables.set(\"status\", \"Error\");\r",
											"        pm.collectionVariables.set(\"error\", \"Something has gone wrong!\");\r",
											"    }\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "X-Version",
										"value": "1.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"listOfStudentData\": [\n    {\n      \"firstName\": \"David\",\n      \"lastName\": \"Hellenberger\",\n      \"dateOfBirth\": \"2000-11-11T00:00:00\",\n      \"email\": \"david.hellenberger@example.com\",\n      \"postcode\": \"G512S\",\n      \"industry\": \"Gaming\",\n      \"dateOfInterest\": \"2023-11-11T00:00:00\",\n      \"logId\": {{logId}}\n    },\n    {\n      \"firstName\": \"Mira\",\n      \"lastName\": \"Falkirt\",\n      \"dateOfBirth\": \"1998-06-11T00:00:00\",\n      \"email\": \"mira.falkirt@example.com\",\n      \"postcode\": \"LH111G\",\n      \"industry\": \"Hospitality\",\n      \"dateOfInterest\": \"2023-11-11T00:00:00\",\n      \"logId\": {{logId}}\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/student-data"
							},
							"response": []
						}
					]
				},
				{
					"name": "leps-data",
					"item": [
						{
							"name": "Get LEPSData",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Version",
										"value": "1.0",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/leps-data/"
							},
							"response": []
						}
					]
				},
				{
					"name": "student-triage-data",
					"item": [
						{
							"name": "GET Student Triage Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();\r",
											"\r",
											"pm.test('GET Student Triage Data 200', () => {\r",
											"    if(pm.response.code === 200) {\r",
											"        console.log(\"GET Student Triage Data 200\")\r",
											"        pm.collectionVariables.set(\"studentId\", response.id);\r",
											"        pm.collectionVariables.set(\"triageLepsId\", response.lepsId);\r",
											"        pm.collectionVariables.set(\"triageLogId\", response.logId);\r",
											"        pm.collectionVariables.set(\"firstName\", response.firstName);\r",
											"        pm.collectionVariables.set(\"lastName\", response.lastName);\r",
											"        pm.collectionVariables.set(\"dateOfBirth\", response.dateOfBirth);\r",
											"        pm.collectionVariables.set(\"email\", response.email);\r",
											"        pm.collectionVariables.set(\"telephone\", response.telephone);\r",
											"        pm.collectionVariables.set(\"dateInterest\", response.dateInterest);\r",
											"        pm.collectionVariables.set(\"industry\", response.industry);\r",
											"        pm.collectionVariables.set(\"postcode\", response.postcode);\r",
											"        pm.collectionVariables.set(\"schoolName\", response.schoolName);\r",
											"        pm.collectionVariables.set(\"dataSource\", response.dataSource);\r",
											"        pm.collectionVariables.set(\"surveyId\", response.studentSurvey.surveyId);\r",
											"    }\r",
											"\r",
											"    if(pm.response.code != 200) {\r",
											"        console.log(\"GET Student Triage Data did not succeed!\")\r",
											"    }\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjVCM25SeHRRN2ppOGVORGMzRnkwNUtmOTdaRSIsImtpZCI6IjVCM25SeHRRN2ppOGVORGMzRnkwNUtmOTdaRSJ9.eyJhdWQiOiJodHRwczovL2Zjc2F6dXJlc2ZhYmlzZ292Lm9ubWljcm9zb2Z0LmNvbS9kYXMtcHAtYXBpbWVuZHAtZXJseWNvbmFwaS1hcy1hciIsImlzcyI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzNhYWNjODM1LTRiODMtNDgzZC04NDFkLWNkNzg3ZjZmMTQ4Ni8iLCJpYXQiOjE3MDYxMTQ4NzMsIm5iZiI6MTcwNjExNDg3MywiZXhwIjoxNzA2MTE5MjQ1LCJhY3IiOiIxIiwiYWlvIjoiQVZRQXEvOFZBQUFBU1BEVWw3NjI1czZtOGxKYU1HWWhIelBFdTJGUlNEMUw5cER5TlFWQXZGQmRMZ2hXdXJpdExCVGVrZ0JhWXF4eTJhRkl1WnVsSkNWTlBkd3docldjVDBrbWxvZEtCMndMWHhpV0pXdnFmSEE9IiwiYW1yIjpbInB3ZCIsIm1mYSJdLCJhcHBpZCI6IjA0YjA3Nzk1LThkZGItNDYxYS1iYmVlLTAyZjllMWJmN2I0NiIsImFwcGlkYWNyIjoiMCIsImlwYWRkciI6IjIwOC4xMjcuNDcuMjIwIiwibmFtZSI6IkRhdmlkIFJpbWFyIiwib2lkIjoiOTJiNDcwZjMtZjk4MC00ZGRlLWJiODktZjE1MjBmMzQ0ZDljIiwicmgiOiIwLkFWNEFOY2lzT29OTFBVaUVIYzE0ZjI4VWhscTJ5Y1lXdUdCTm9aN1lnVkpHTXJJUkFhdy4iLCJyb2xlcyI6WyJBUElNIl0sInNjcCI6InVzZXJfaW1wZXJzb25hdGlvbiIsInN1YiI6ImVzdkRwM1NhNWRuX282ZXVVNFFiZFZuSHdsVlhyNFhjMTI3Sm5Wa2ZFV00iLCJ0aWQiOiIzYWFjYzgzNS00YjgzLTQ4M2QtODQxZC1jZDc4N2Y2ZjE0ODYiLCJ1bmlxdWVfbmFtZSI6ImRhdmlkLnJpbWFyQGZjc2F6dXJlc2ZhYmlzZ292Lm9ubWljcm9zb2Z0LmNvbSIsInVwbiI6ImRhdmlkLnJpbWFyQGZjc2F6dXJlc2ZhYmlzZ292Lm9ubWljcm9zb2Z0LmNvbSIsInV0aSI6IlVjLTZjcy1VM1V1YWZxVF9fTnZvQUEiLCJ2ZXIiOiIxLjAifQ.0MwzDL6KHPkhxVDWIN_4AYUOKnuA4uGotZZvdxYe3bpZ4Ru-7sdzcsgKp4YlNhAsvEK5sVlJfwEz3O1dATiqVyvdESpI-QAlb3trD8ylKNFkr_7eHnsW39lfFU0Dph-04h2DAfnBc-V1-qRDH1VK8faxtIaDHkOcrCLNPmjFOCPgavXQJYWH7tqcO2iBhYpICZ6PnOgNrB-TpkvYlDu_CqqG9lXnfcMo5ChXc-FFrKXsRXGuL91u7pqJgNK_5BGUaG-941GbavnI9dKmwFizg9tiRefMoz2n8VnWeg7lPpda_Dz1mqhQubMPB-MUWu5Rf8KuB95-ZdY1StvmprM8xA"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Version",
										"value": "1.0",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/student-triage-data/{{studentSurveyGuid}}"
							},
							"response": []
						},
						{
							"name": "POST Other Student Triage Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Check Student Triage Data Response', () => {\r",
											"    if(pm.response.code === 201) {\r",
											"        console.log(\"Student Triage Data Response 201\")\r",
											"    }\r",
											"\r",
											"    if(pm.response.code != 201) {\r",
											"         pm.expect.fail(\"Something has gone wrong!\")\r",
											"    }\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjVCM25SeHRRN2ppOGVORGMzRnkwNUtmOTdaRSIsImtpZCI6IjVCM25SeHRRN2ppOGVORGMzRnkwNUtmOTdaRSJ9.eyJhdWQiOiJodHRwczovL2Zjc2F6dXJlc2ZhYmlzZ292Lm9ubWljcm9zb2Z0LmNvbS9kYXMtcHAtYXBpbWVuZHAtZXJseWNvbmFwaS1hcy1hciIsImlzcyI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzNhYWNjODM1LTRiODMtNDgzZC04NDFkLWNkNzg3ZjZmMTQ4Ni8iLCJpYXQiOjE3MDYxMTQ4NzMsIm5iZiI6MTcwNjExNDg3MywiZXhwIjoxNzA2MTE5MjQ1LCJhY3IiOiIxIiwiYWlvIjoiQVZRQXEvOFZBQUFBU1BEVWw3NjI1czZtOGxKYU1HWWhIelBFdTJGUlNEMUw5cER5TlFWQXZGQmRMZ2hXdXJpdExCVGVrZ0JhWXF4eTJhRkl1WnVsSkNWTlBkd3docldjVDBrbWxvZEtCMndMWHhpV0pXdnFmSEE9IiwiYW1yIjpbInB3ZCIsIm1mYSJdLCJhcHBpZCI6IjA0YjA3Nzk1LThkZGItNDYxYS1iYmVlLTAyZjllMWJmN2I0NiIsImFwcGlkYWNyIjoiMCIsImlwYWRkciI6IjIwOC4xMjcuNDcuMjIwIiwibmFtZSI6IkRhdmlkIFJpbWFyIiwib2lkIjoiOTJiNDcwZjMtZjk4MC00ZGRlLWJiODktZjE1MjBmMzQ0ZDljIiwicmgiOiIwLkFWNEFOY2lzT29OTFBVaUVIYzE0ZjI4VWhscTJ5Y1lXdUdCTm9aN1lnVkpHTXJJUkFhdy4iLCJyb2xlcyI6WyJBUElNIl0sInNjcCI6InVzZXJfaW1wZXJzb25hdGlvbiIsInN1YiI6ImVzdkRwM1NhNWRuX282ZXVVNFFiZFZuSHdsVlhyNFhjMTI3Sm5Wa2ZFV00iLCJ0aWQiOiIzYWFjYzgzNS00YjgzLTQ4M2QtODQxZC1jZDc4N2Y2ZjE0ODYiLCJ1bmlxdWVfbmFtZSI6ImRhdmlkLnJpbWFyQGZjc2F6dXJlc2ZhYmlzZ292Lm9ubWljcm9zb2Z0LmNvbSIsInVwbiI6ImRhdmlkLnJpbWFyQGZjc2F6dXJlc2ZhYmlzZ292Lm9ubWljcm9zb2Z0LmNvbSIsInV0aSI6IlVjLTZjcy1VM1V1YWZxVF9fTnZvQUEiLCJ2ZXIiOiIxLjAifQ.0MwzDL6KHPkhxVDWIN_4AYUOKnuA4uGotZZvdxYe3bpZ4Ru-7sdzcsgKp4YlNhAsvEK5sVlJfwEz3O1dATiqVyvdESpI-QAlb3trD8ylKNFkr_7eHnsW39lfFU0Dph-04h2DAfnBc-V1-qRDH1VK8faxtIaDHkOcrCLNPmjFOCPgavXQJYWH7tqcO2iBhYpICZ6PnOgNrB-TpkvYlDu_CqqG9lXnfcMo5ChXc-FFrKXsRXGuL91u7pqJgNK_5BGUaG-941GbavnI9dKmwFizg9tiRefMoz2n8VnWeg7lPpda_Dz1mqhQubMPB-MUWu5Rf8KuB95-ZdY1StvmprM8xA"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Version",
										"value": "1",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"david.test@example.com\",\r\n  \"lepsCode\": \"E2412359\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/student-triage-data/survey-create"
							},
							"response": []
						},
						{
							"name": "POST Student Triage Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Check Student Triage Data Response', () => {\r",
											"    if(pm.response.code === 201) {\r",
											"        console.log(\"Student Triage Data Response 201\")\r",
											"    }\r",
											"\r",
											"    if(pm.response.code != 201) {\r",
											"         pm.expect.fail(\"Something has gone wrong!\")\r",
											"    }\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IjVCM25SeHRRN2ppOGVORGMzRnkwNUtmOTdaRSIsImtpZCI6IjVCM25SeHRRN2ppOGVORGMzRnkwNUtmOTdaRSJ9.eyJhdWQiOiJodHRwczovL2Zjc2F6dXJlc2ZhYmlzZ292Lm9ubWljcm9zb2Z0LmNvbS9kYXMtcHAtYXBpbWVuZHAtZXJseWNvbmFwaS1hcy1hciIsImlzcyI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzNhYWNjODM1LTRiODMtNDgzZC04NDFkLWNkNzg3ZjZmMTQ4Ni8iLCJpYXQiOjE3MDYxMTQ4NzMsIm5iZiI6MTcwNjExNDg3MywiZXhwIjoxNzA2MTE5MjQ1LCJhY3IiOiIxIiwiYWlvIjoiQVZRQXEvOFZBQUFBU1BEVWw3NjI1czZtOGxKYU1HWWhIelBFdTJGUlNEMUw5cER5TlFWQXZGQmRMZ2hXdXJpdExCVGVrZ0JhWXF4eTJhRkl1WnVsSkNWTlBkd3docldjVDBrbWxvZEtCMndMWHhpV0pXdnFmSEE9IiwiYW1yIjpbInB3ZCIsIm1mYSJdLCJhcHBpZCI6IjA0YjA3Nzk1LThkZGItNDYxYS1iYmVlLTAyZjllMWJmN2I0NiIsImFwcGlkYWNyIjoiMCIsImlwYWRkciI6IjIwOC4xMjcuNDcuMjIwIiwibmFtZSI6IkRhdmlkIFJpbWFyIiwib2lkIjoiOTJiNDcwZjMtZjk4MC00ZGRlLWJiODktZjE1MjBmMzQ0ZDljIiwicmgiOiIwLkFWNEFOY2lzT29OTFBVaUVIYzE0ZjI4VWhscTJ5Y1lXdUdCTm9aN1lnVkpHTXJJUkFhdy4iLCJyb2xlcyI6WyJBUElNIl0sInNjcCI6InVzZXJfaW1wZXJzb25hdGlvbiIsInN1YiI6ImVzdkRwM1NhNWRuX282ZXVVNFFiZFZuSHdsVlhyNFhjMTI3Sm5Wa2ZFV00iLCJ0aWQiOiIzYWFjYzgzNS00YjgzLTQ4M2QtODQxZC1jZDc4N2Y2ZjE0ODYiLCJ1bmlxdWVfbmFtZSI6ImRhdmlkLnJpbWFyQGZjc2F6dXJlc2ZhYmlzZ292Lm9ubWljcm9zb2Z0LmNvbSIsInVwbiI6ImRhdmlkLnJpbWFyQGZjc2F6dXJlc2ZhYmlzZ292Lm9ubWljcm9zb2Z0LmNvbSIsInV0aSI6IlVjLTZjcy1VM1V1YWZxVF9fTnZvQUEiLCJ2ZXIiOiIxLjAifQ.0MwzDL6KHPkhxVDWIN_4AYUOKnuA4uGotZZvdxYe3bpZ4Ru-7sdzcsgKp4YlNhAsvEK5sVlJfwEz3O1dATiqVyvdESpI-QAlb3trD8ylKNFkr_7eHnsW39lfFU0Dph-04h2DAfnBc-V1-qRDH1VK8faxtIaDHkOcrCLNPmjFOCPgavXQJYWH7tqcO2iBhYpICZ6PnOgNrB-TpkvYlDu_CqqG9lXnfcMo5ChXc-FFrKXsRXGuL91u7pqJgNK_5BGUaG-941GbavnI9dKmwFizg9tiRefMoz2n8VnWeg7lPpda_Dz1mqhQubMPB-MUWu5Rf8KuB95-ZdY1StvmprM8xA"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "X-Version",
										"value": "1",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": {{studentId}},\r\n  \"lepsId\": {{triageLepsId}},\r\n  \"logId\": {{triageLogId}},\r\n  \"firstName\": \"{{firstName}}\",\r\n  \"lastName\": \"{{lastName}}\",\r\n  \"dateOfBirth\": {{dateOfBirth}},\r\n  \"email\": \"{{email}}\",\r\n  \"postCode\": \"{{postcode}}\",\r\n  \"telephone\": \"{{telephone}}\",\r\n  \"dataSource\": \"{{dataSource}}\",\r\n  \"schoolName\": \"{{schoolName}}\",\r\n  \"industry\": \"{{industry}}\",\r\n  \"studentSurvey\": {\r\n    \"id\": \"{{studentSurveyGuid}}\",\r\n    \"studentId\": {{studentId}},\r\n    \"surveyId\": {{surveyId}},\r\n    \"dateCompleted\": \"2023-11-30T00:00:00\",\r\n    \"responseAnswers\": [\r\n      {\r\n        \"questionId\": 1,\r\n        \"answerId\": 1,\r\n        \"response\": \"Red\"\r\n      },\r\n      {\r\n        \"questionId\": 2,\r\n        \"answerId\": 4,\r\n        \"response\": \"Average\"\r\n      }\r\n    ]\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/student-triage-data/{{studentSurveyGuid}}"
							},
							"response": []
						}
					]
				},
				{
					"name": "delivery-update",
					"item": [
						{
							"name": "Update Delivery",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Check Delivery Update Response', () => {\r",
											"    if(pm.response.code === 200) {\r",
											"        console.log(\"Delivery Update Response 200\")\r",
											"    }\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "X-Version",
										"value": "1.0"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"source\": {{deliveryUpdateSource}},\n  \"ids\": {{deliveryUpdateIds}}\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/delivery-update/update"
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "X-Version",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"source\": {{deliveryUpdateSource}},\n  \"ids\": {{deliveryUpdateIds}}\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/delivery-update"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "X-Version",
												"value": ""
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"source\": {{deliveryUpdateSource}},\n  \"ids\": [1000,2000]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/delivery-update"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": {
			"token": ""
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "/"
		},
		{
			"key": "logId",
			"value": "375",
			"type": "string"
		},
		{
			"key": "status",
			"value": "",
			"type": "string"
		},
		{
			"key": "error",
			"value": "\"\"",
			"type": "string"
		},
		{
			"key": "lepsCode",
			"value": "E37000025",
			"type": "string"
		},
		{
			"key": "studentSurveyGuid",
			"value": "9927296D-55DD-483B-6856-08DC2254F7AA",
			"type": "string"
		},
		{
			"key": "studentId",
			"value": "",
			"type": "string"
		},
		{
			"key": "triageLogId",
			"value": "",
			"type": "string"
		},
		{
			"key": "triageLepsId",
			"value": "",
			"type": "string"
		},
		{
			"key": "firstName",
			"value": "",
			"type": "string"
		},
		{
			"key": "lastName",
			"value": "",
			"type": "string"
		},
		{
			"key": "dateOfBirth",
			"value": "",
			"type": "string"
		},
		{
			"key": "schoolName",
			"value": "",
			"type": "string"
		},
		{
			"key": "postcode",
			"value": "",
			"type": "string"
		},
		{
			"key": "email",
			"value": "",
			"type": "string"
		},
		{
			"key": "telephone",
			"value": "",
			"type": "string"
		},
		{
			"key": "industry",
			"value": "",
			"type": "string"
		},
		{
			"key": "dateInterest",
			"value": "",
			"type": "string"
		},
		{
			"key": "dataSource",
			"value": "",
			"type": "string"
		},
		{
			"key": "surveyId",
			"value": "1",
			"type": "string"
		},
		{
			"key": "deliveryUpdateSource",
			"value": "\"StudentData\"",
			"type": "string"
		},
		{
			"key": "deliveryUpdateIds",
			"value": "[146,147,148]",
			"type": "string"
		}
	]
}